@model Product

@{
    ViewBag.Title = "Product Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-4">
    <h2 class="text-center fw-bold text-primary mb-4">Product Details</h2>

    @if (Model == null)
    {
        <div class="alert alert-custom alert-danger">
            <i class="fas fa-exclamation-circle me-2"></i> Product not found!
        </div>
    }
    else
    {
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <!-- Product Card -->
                <div class="card card-custom mb-4 position-relative">
                    <!-- Favorite Button -->
                    <div class="position-absolute top-0 end-0 p-3" style="z-index: 10;">
                        <form id="favoriteForm" asp-area="Customer" asp-controller="Favorites" asp-action="ToggleFavorite" method="post">
                            <input type="hidden" name="productId" value="@Model.Id" />
                            <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                            <button id="favoriteButton" type="submit" class="btn btn-link p-0 border-0 bg-transparent">
                                <i id="heartIcon" class="fas fa-heart fs-4 text-muted"></i>
                            </button>
                        </form>
                    </div>

                    <!-- Product Image -->
                    <div class="text-center p-3">
                        <img src="@(!string.IsNullOrEmpty(Model.ImageUrl) ? Model.ImageUrl : "/images/placeholder.jpg")"
                             alt="@Model.Name"
                             class="img-fluid rounded shadow-sm" style="max-height: 400px;" />

                        <div class="card-body">
                            <h3 class="card-title text-primary mb-3">@Model.Name</h3>
                        
                            <div class="mb-4">
                                <div class="row mb-2">
                                    <div class="col-md-3 fw-bold">Description:</div>
                                    <div class="col-md-9">@Model.Description</div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-3 fw-bold">Price:</div>
                                    <div class="col-md-9 text-success fw-bold">@Model.Price.ToString("C")</div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-3 fw-bold">Stock:</div>
                                    <div class="col-md-9">@Model.Stock</div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-3 fw-bold">Category:</div>
                                    <div class="col-md-9">@(Model.Category?.Name ?? "No Category")</div>
                                </div>
                            </div>

                            <!-- Add to Cart Button -->
                            <div class="text-center mt-4">
                                @if (Model.Stock > 0)
                                {
                                    <form asp-controller="Home" asp-action="AddToCart" method="post">
                                        <input type="hidden" name="productId" value="@Model.Id" />
                                        <input type="hidden" name="returnUrl" value="@Url.Action("Details", "Home", new { id = Model.Id })" />
                                        <button type="submit" class="btn btn-primary btn-lg px-5 py-2">
                                            <i class="fas fa-cart-plus me-2"></i> Add to Cart
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <div class="alert alert-custom alert-warning mb-0">
                                        <i class="fas fa-exclamation-triangle me-2"></i> Out of Stock
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- User Reviews Section -->
                <div class="card card-custom mb-4">
                    <div class="card-header bg-transparent">
                        <h4 class="fw-bold mb-0">
                            <i class="fas fa-star text-warning me-2"></i>User Reviews
                        </h4>
                    </div>

                    <div class="card-body">
                        @if (Model.Reviews == null || !Model.Reviews.Any())
                        {
                            <div class="alert alert-custom alert-info">
                                <i class="fas fa-info-circle me-2"></i> No reviews yet. Be the first to review this product!
                            </div>
                        }
                        else
                        {
                            <div class="review-list">
                                @foreach (var review in Model.Reviews)
                                {
                                    <div class="review-item border-bottom pb-3 mb-3">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-user-circle text-secondary me-2 fs-4"></i>
                                                <span class="fw-bold">@(review.User?.FirstName ?? "Anonymous")</span>
                                            </div>
                                            <div class="rating">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                                }
                                            </div>
                                        </div>
                                        <div class="review-content ms-4">
                                            <p class="mb-1">@review.Comment</p>
                                            <small class="text-muted">Reviewed on @review.CreatedAt.ToShortDateString()</small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }

                        <!-- Add Review Form -->
                        <div class="mt-4 pt-3 border-top">
                            <h5 class="fw-bold mb-3">
                                <i class="fas fa-pen text-primary me-2"></i>Leave a Review
                            </h5>
                            <form asp-area="Customer" asp-controller="Reviews" asp-action="AddReview" method="post">
                                <input type="hidden" name="productId" value="@Model.Id" />

                                <div class="mb-3">
                                    <label class="form-label fw-bold">Rating</label>
                                    <div id="rating-stars" class="d-flex gap-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star rating-star text-muted fs-4" data-rating="@i"></i>
                                        }
                                    </div>
                                    <input type="hidden" id="rating" name="rating" value="0" required />
                                </div>

                                <div class="mb-3">
                                    <label for="comment" class="form-label fw-bold">Comment (Optional)</label>
                                    <textarea id="comment" name="comment" class="form-control form-control-custom" rows="3"></textarea>
                                </div>

                                <button type="submit" class="btn btn-primary">Submit Review</button>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Back Button -->
                <div class="text-center mb-4">
                    <a asp-action="Index" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left me-2"></i>Back to Products
                    </a>
                </div>
            </div>
        </div>
    }
</div>
        
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Star Rating Script
            const stars = document.querySelectorAll('.rating-star');
            const ratingValue = document.getElementById('rating');
            
            stars.forEach(star => {
                star.addEventListener('click', function () {
                    const selectedRating = this.getAttribute('data-rating');
                    ratingValue.value = selectedRating;
                    
                    // Update star colors
                    stars.forEach((s, index) => {
                        if (index < selectedRating) {
                            s.classList.remove('text-muted');
                            s.classList.add('text-warning');
                        } else {
                            s.classList.remove('text-warning');
                            s.classList.add('text-muted');
                        }
                    });
                });
                
                star.addEventListener('mouseover', function () {
                    const hoveredRating = this.getAttribute('data-rating');
                    stars.forEach((s, index) => {
                        if (index < hoveredRating) {
                            s.classList.remove('text-muted');
                            s.classList.add('text-warning');
                        } else {
                            s.classList.remove('text-warning');
                            s.classList.add('text-muted');
                        }
                    });
                });
                
                star.addEventListener('mouseout', function () {
                    const currentRating = ratingValue.value;
                    stars.forEach((s, index) => {
                        if (index < currentRating) {
                            s.classList.remove('text-muted');
                            s.classList.add('text-warning');
                        } else {
                            s.classList.remove('text-warning');
                            s.classList.add('text-muted');
                        }
                    });
                });
            });
            
            // Toggle Favorite AJAX
            var productId = $('input[name="productId"]').val();
            
            // Check favorite state in localStorage
            if (localStorage.getItem('favorite_' + productId) === 'true') {
                $('#heartIcon').removeClass('text-muted').addClass('text-danger');
            } else {
                $('#heartIcon').removeClass('text-danger').addClass('text-muted');
            }
            
            $('#favoriteForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var formData = form.serialize();
                var heartIcon = $('#heartIcon');
                
                // Toggle favorite state in localStorage
                var isFavorited = localStorage.getItem('favorite_' + productId) === 'true' ? 'false' : 'true';
                localStorage.setItem('favorite_' + productId, isFavorited);
                
                // Toggle heart icon appearance
                heartIcon.toggleClass('text-muted text-danger');
                
                // Submit the form via AJAX
                $.ajax({
                    url: '/Customer/Favorites/ToggleFavorite',
                    method: 'POST',
                    data: formData,
                    success: function (response) {
                        console.log('Response:', response);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                        
                        // Show error notification
                        const errorAlert = $(`
                            <div class="alert alert-custom alert-danger alert-dismissible fade show">
                                <div class="alert-content">
                                    <i class="fas fa-exclamation-circle me-2"></i>
                                    <span>An error occurred while updating your favorites.</span>
                                </div>
                                <button type="button" class="btn-close-custom" data-bs-dismiss="alert" aria-label="Close">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        `);
                        
                        $('.container').prepend(errorAlert);
                        
                        // Remove alert after 5 seconds
                        setTimeout(() => {
                            errorAlert.remove();
                        }, 5000);
                    }
                });
                
                // Add animation effect
                heartIcon.addClass('animate__animated animate__heartBeat');
                setTimeout(function () {
                    heartIcon.removeClass('animate__animated animate__heartBeat');
                }, 1000);
            });
        });
    </script>
}