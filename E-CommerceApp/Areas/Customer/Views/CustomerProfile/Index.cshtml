@model App.Models.ViewModels.ProfileViewModel

@{
    ViewData["Title"] = "My Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <!-- Profile Header -->
            <div class="text-center mb-5">
                <i class="fas fa-user-circle fa-3x text-primary mb-3"></i>
                <h2 class="fw-bold">@Model.User.FirstName @Model.User.LastName</h2>
                <p class="text-muted">@Model.User.Email</p>
            </div>

            <!-- Personal Details -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Personal Details</h5>
                    <a asp-controller="CustomerProfile" asp-action="EditProfile" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-edit me-1"></i> Edit
                    </a>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-envelope me-2"></i>Email</span>
                            <span>@Model.User.Email</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-phone me-2"></i>Phone Number</span>
                            <span>@(string.IsNullOrEmpty(Model.User.PhoneNumber) ? "Not provided" : Model.User.PhoneNumber)</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-map-marker-alt me-2"></i>Address</span>
                            <span>
                                @(string.IsNullOrEmpty(Model.User.StreetAddress) ? "Not provided" :
                                    $"{Model.User.StreetAddress}, {Model.User.City}, {Model.User.State} {Model.User.PostalCode}")
                            </span>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Shopping Cart -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Shopping Cart</h5>
                    @if (Model.CartItems.Any())
                    {
                        <form asp-area="Customer" asp-controller="Cart" asp-action="ClearCart" method="post" id="clear-cart-form">
                            <input type="hidden" name="ReturnUrl" value="@Url.Action("Index", "CustomerProfile", new { area = "Customer" })" />
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-outline-danger btn-sm" id="clear-cart-btn">
                                <i class="fas fa-trash me-1"></i> Clear Cart
                            </button>
                        </form>
                    }
                </div>
                <div class="card-body">
                    @if (Model.CartItems.Any())
                    {
                        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                            @foreach (var item in Model.CartItems)
                            {
                                <div class="col">
                                    <div class="card h-100 border-0 shadow-sm">
                                        <div class="position-relative">
                                            <img src="@item.Product.ImageUrl" class="card-img-top" alt="@item.Product.Name" style="height: 180px; object-fit: cover;" />
                                            <form asp-area="Customer" asp-controller="Cart" asp-action="RemoveFromCart" method="post" class="position-absolute top-0 end-0 m-2">
                                                <input type="hidden" name="productId" value="@item.ProductId" />
                                                <input type="hidden" name="returnUrl" value="@Url.Action("Index", "CustomerProfile", new { area = "Customer" })" />
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-danger btn-sm rounded-circle remove-cart-item" data-toggle="tooltip" data-placement="top" title="Remove from Cart">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                        <div class="card-body">
                                            <h6 class="card-title">
                                                <a asp-area="" asp-controller="Home" asp-action="Details" asp-route-id="@item.ProductId" class="text-decoration-none text-dark">@item.Product.Name</a>
                                            </h6>
                                            <p class="card-text text-muted small text-truncate">@item.Product.Description</p>
                                            <p class="card-text fw-bold">$@item.Product.Price</p>
                                            <p class="card-text small text-muted">Quantity: @item.Quantity</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-shopping-cart fa-2x text-muted mb-2"></i>
                            <p class="text-muted">Your shopping cart is empty.</p>
                            <a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-primary btn-sm">
                                <i class="fas fa-shopping-bag me-1"></i> Start Shopping
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Wishlist -->
            <div class="card shadow-sm">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Wishlist</h5>
                    @if (Model.WishlistItems.Any())
                    {
                        <form asp-area="Customer" asp-controller="Favorites" asp-action="ClearWishlist" method="post" id="clear-wishlist-form">
                            <input type="hidden" name="ReturnUrl" value="@Url.Action("Index", "CustomerProfile", new { area = "Customer" })" />
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-outline-danger btn-sm" id="clear-wishlist-btn">
                                <i class="fas fa-trash me-1"></i> Clear Wishlist
                            </button>
                        </form>
                    }
                </div>
                <div class="card-body">
                    @if (Model.WishlistItems.Any())
                    {
                        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                            @foreach (var item in Model.WishlistItems)
                            {
                                <div class="col">
                                    <div class="card h-100 border-0 shadow-sm">
                                        <div class="position-relative">
                                            <img src="@item.Product.ImageUrl" class="card-img-top" alt="@item.Product.Name" style="height: 180px; object-fit: cover;" />
                                            <form asp-area="Customer" asp-controller="Favorites" asp-action="ToggleFavorite" method="post" class="position-absolute top-0 end-0 m-2">
                                                <input type="hidden" name="ProductId" value="@item.ProductId" />
                                                <input type="hidden" name="ReturnUrl" value="@Url.Action("Index", "CustomerProfile", new { area = "Customer" })" />
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-danger btn-sm rounded-circle" data-toggle="tooltip" data-placement="top" title="Remove from Wishlist">
                                                    <i class="fas fa-heart-broken"></i>
                                                </button>
                                            </form>
                                        </div>
                                        <div class="card-body">
                                            <h6 class="card-title">
                                                <a asp-area="" asp-controller="Home" asp-action="Details" asp-route-id="@item.ProductId" class="text-decoration-none text-dark">@item.Product.Name</a>
                                            </h6>
                                            <p class="card-text text-muted small text-truncate">@item.Product.Description</p>
                                            <p class="card-text fw-bold">$@item.Product.Price</p>
                                            <form action="@Url.Action("AddToCart", "Home", new { area = "" })" method="post" class="add-to-cart-form mt-2">
                                                <input type="hidden" name="ProductId" value="@item.ProductId" />
                                                <input type="hidden" name="ReturnUrl" value="@Url.Action("Details", "Home", new { area = "", id = item.ProductId })" />
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-primary btn-sm w-100">
                                                    <i class="fas fa-cart-plus me-1"></i> Add to Cart
                                                    <span class="spinner-border spinner-border-sm ms-2 d-none" role="status" aria-hidden="true"></span>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-heart-broken fa-2x text-muted mb-2"></i>
                            <p class="text-muted">Your wishlist is empty.</p>
                            <a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-primary btn-sm">
                                <i class="fas fa-shopping-bag me-1"></i> Start Shopping
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle form submissions with loading spinner
            $('.add-to-cart-form, #clear-cart-form, #clear-wishlist-form, form[action*="RemoveFromCart"], form[action*="ToggleFavorite"]').on('submit', function () {
                $(this).find('button[type="submit"]').prop('disabled', true);
                $(this).find('.spinner-border').removeClass('d-none');
            });

            // Confirm clear cart
            $('#clear-cart-form').on('submit', function (e) {
                if (!confirm('Are you sure you want to clear your cart?')) {
                    e.preventDefault();
                    $(this).find('button[type="submit"]').prop('disabled', false);
                    $(this).find('.spinner-border').addClass('d-none');
                }
            });

            // Confirm clear wishlist
            $('#clear-wishlist-form').on('submit', function (e) {
                if (!confirm('Are you sure you want to clear your wishlist?')) {
                    e.preventDefault();
                    $(this).find('button[type="submit"]').prop('disabled', false);
                    $(this).find('.spinner-border').addClass('d-none');
                }
            });

            // Prompt login for anonymous users
            $('.add-to-cart-form').on('submit', function (e) {
                @if (!User.Identity.IsAuthenticated)
                {
                    <text>
                        e.preventDefault();
                        if (confirm('Please log in to add items to your cart. Proceed to login?')) {
                            window.location.href = '@Url.Page("/Account/Login", new { area = "Identity", returnUrl = Url.Action("Index", "CustomerProfile", new { area = "Customer" }) })';
                        }
                        $(this).find('button[type="submit"]').prop('disabled', false);
                        $(this).find('.spinner-border').addClass('d-none');
                    </text>
                }
            });

            // Initialize tooltips
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}